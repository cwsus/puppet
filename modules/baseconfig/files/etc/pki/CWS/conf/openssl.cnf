#
# OpenSSL example configuration file.
# This is mostly being used for generation of certificate requests.
#
# This definition stops the following lines choking if HOME isn't
# defined.
HOME                           = .
RANDFILE                       = $ENV::HOME/.rnd
oid_section                    = new_oids

[ new_oids ]
tsa_policy1                    = 1.2.3.4.1
tsa_policy2                    = 1.2.3.4.5.6
tsa_policy3                    = 1.2.3.4.5.7

[ ca ]
default_ca                     = CA_default               # The default ca section

[ CA_default ]
dir                            = /etc/pki/CWS             # Where everything is kept
certs                          = $dir/certs               # Where the issued certs are kept
crl_dir                        = $dir/crl                 # Where the issued crl are kept
database                       = $dir/db/index.txt        # database index file.
unique_subject                 = yes                      # Set to 'no' to allow creation of several certificates with same subject.
new_certs_dir                  = $dir/newcerts            # default place for new certs.
certificate                    = $dir/certs/ca.crt    # The CA certificate
serial                         = $dir/db/serial           # The current serial number
crlnumber                      = $dir/crl/crlnumber       # the current crl number must be commented out to leave a V1 CRL
crl                            = $dir/crl/ca.crl      # The current CRL
private_key                    = $dir/private/ca.key  # The private key
RANDFILE                       = $dir/private/.rand       # private random number file
x509_extensions                = usr_cert                 # The extentions to add to the cert
name_opt                       = ca_default               # Subject Name options
cert_opt                       = ca_default               # Certificate field options
crl_extensions                 = crl_ext
default_days                   = 365                      # how long to certify for
default_crl_days               = 30                       # how long before next CRL
default_md                     = sha512                   # use public key default MD
preserve                       = no                       # keep passed DN ordering
policy                         = policy_loose

[ policy_match ]
countryName                    = match
stateOrProvinceName            = match
organizationName               = match
organizationalUnitName         = match
commonName                     = supplied
emailAddress                   = optional

[ policy_loose ]
countryName                    = optional
stateOrProvinceName            = optional
localityName                   = optional
organizationName               = optional
organizationalUnitName         = optional
commonName                     = supplied
emailAddress                   = optional

[ req ]
default_bits                   = 2048
default_md                     = sha512
default_keyfile                = privkey.pem
distinguished_name             = req_distinguished_name
attributes                     = req_attributes
x509_extensions                = v3_ca                    # The extentions to add to the self signed cert
string_mask                    = utf8only
req_extensions                 = v3_req                   # The extensions to add to a certificate request

[ req_distinguished_name ]
countryName                    = Country Name (2 letter code)
countryName_default            = US
countryName_min                = 2
countryName_max                = 2
stateOrProvinceName            = State or Province Name (full name)
stateOrProvinceName_default    = New York
localityName                   = Locality Name (eg, city)
localityName_default           = Buffalo
0.organizationName             = Organization Name (eg, company)
0.organizationName_default     = CaspersBox Web Services
organizationalUnitName         = Organizational Unit Name (eg, section)
organizationalUnitName_default = Research and Development
commonName                     = Common Name (eg, your name or your server\'s hostname)
commonName_max                 = 64
emailAddress                   = Email Address
emailAddress_max               = 64
emailAddress_default           = secadm@caspersbox.com

[ req_attributes ]
challengePassword              = A challenge password
challengePassword_min          = 4
challengePassword_max          = 64
unstructuredName               = An optional company name
unstructuredName_default       = CaspersBox Web Services

[ usr_cert ]
basicConstraints               = CA:FALSE
nsCertType                     = client, email
keyUsage                       = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage               = critical, clientAuth, codeSigning, emailProtection, msEFS, msSmartcardLogin # For Smart Card Logon
nsComment                      = "CaspersBox Web Services"
subjectKeyIdentifier           = hash
authorityKeyIdentifier         = keyid, issuer
subjectAltName                 = @alt_names
issuerAltName                  = issuer:copy
nsCaRevocationUrl              = http://www.caspersbox.com/cws_v4.crl

[ server_cert ]
basicConstraints               = CA:FALSE
nsCertType                     = server
keyUsage                       = critical, nonRepudiation, digitalSignature, keyEncipherment, dataEncipherment
extendedKeyUsage               = critical, serverAuth
nsComment                      = "CaspersBox Web Services"
subjectKeyIdentifier           = hash
authorityKeyIdentifier         = keyid,issuer
subjectAltName                 = @alt_names
issuerAltName                  = issuer:copy
nsCaRevocationUrl              = http://www.caspersbox.com/cws_v4.crl

[ alt_names ]
DNS.1                          = proxmox.caspersbox.com
DNS.2                          = pve-master.caspersbox.com
IP.1                           = 192.168.10.250

[ v3_req ]
# Extensions to add to a certificate request
basicConstraints               = CA:FALSE
keyUsage                       = nonRepudiation, digitalSignature, keyEncipherment, dataEncipherment
subjectKeyIdentifier           = hash
subjectAltName                 = @alt_names

[ v3_ca ]
subjectKeyIdentifier           = hash
authorityKeyIdentifier         = keyid:always,issuer
basicConstraints               = critical, CA:true
keyUsage                       = critical, digitalSignature, cRLSign, keyCertSign
nsCertType                     = server, sslCA, emailCA
subjectAltName                 = email:copy
issuerAltName                  = issuer:copy

[ v3_intermediate_ca ]
subjectKeyIdentifier           = hash
authorityKeyIdentifier         = keyid:always, issuer:always
basicConstraints               = critical, CA:true
keyUsage                       = critical, cRLSign, keyCertSign
extendedKeyUsage               = critical, serverAuth, clientAuth, codeSigning, emailProtection, timeStamping, OCSPSigning, msSGC, nsSGC, msEFS, msSmartcardLogin
nsCertType                     = server, sslCA, emailCA
subjectAltName                 = email:copy
issuerAltName                  = issuer:copy

[ crl_ext ]
# CRL extensions.
# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.
issuerAltName                  = issuer:copy
authorityKeyIdentifier         = keyid:always

[ proxy_cert_ext ]
basicConstraints               = CA:FALSE
nsComment                      = "OpenSSL Generated Certificate"
subjectKeyIdentifier           = hash
authorityKeyIdentifier         = keyid,issuer
proxyCertInfo                  = critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo

[ v3_logon_cert ]
keyUsage                       = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage               = critical, clientAuth, codeSigning, emailProtection, msSmartcardLogin, msEFS
basicConstraints               = critical, CA:FALSE
subjectKeyIdentifier           = hash
authorityKeyIdentifier         = keyid, issuer
authorityInfoAccess            = caIssuers;URI:http://www.caspersbox.corp/ca.html
subjectAltName                 = otherName:msUPN; UTF8:kmhuntly@gmail.com, email:kmhuntly@gmail.com
certificatePolicies            = ia5org, @polsect

[ polsect ]
policyIdentifier               = 1.3.5.8
CPS.1                          = "http://www.caspersbox.com/";
userNotice.1                   = @notice

[ notice ]
explicitText                   = "CaspersBox Web Services"
organization                   = "CaspersBox Web Services"
noticeNumbers                  = 1

[ tsa ]
default_tsa                    = tsa_config1              # the default TSA section

[ tsa_config1 ]
# These are used by the TSA reply generation only.
dir                            = ./demoCA                 # TSA root directory
serial                         = $dir/db/tsaserial        # The current serial number (mandatory)
crypto_device                  = builtin                  # OpenSSL engine to use for signing
signer_cert                    = $dir/certs/tsacert.pem   # The TSA signing certificat (optional)
certs                          = $dir/certs/cacert.pem    # Certificate chain to include in reply (optional)
signer_key                     = $dir/private/tsakey.pem  # The TSA private key (optional)
default_policy                 = tsa_policy1              # Policy if request did not specify it (optional)
other_policies                 = tsa_policy2, tsa_policy3 # acceptable policies (optional)
digests                        = md5, sha512                # Acceptable message digests (mandatory)
# (optional)
accuracy                       = secs:1, millisecs:500, microsecs:100
clock_precision_digits         = 0                        # number of digits after dot. (optional)
ordering                       = yes                      # Is ordering defined for timestamps? (optional, default: no)
tsa_name                       = yes                      # Must the TSA name be included in the reply? (optional, default: no)
ess_cert_id_chain              = no                       # Must the ESS cert id chain be included? (optional, default: no)


